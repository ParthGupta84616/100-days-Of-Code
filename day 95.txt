Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), ..., (an, bn) such that the sum of min(ai, bi) for all i is maximized. Print the maximized sum.

Input Format

The first line will give T, the number of testcases.
The first line of each testcase will give n.
The second line of each testcase will give integer array nums.
Constraints

1 <= T <= 1000
1 <= n <= 10^4
nums.length == 2 * n
-10^4 <= nums[i] <= 10^4
Output Format

For each testcase, Print the maximized sum.

Sample Input 0

1
2
1 4 3 2
Sample Output 0

4
Explanation 0

All possible pairings (ignoring the ordering of elements) are:

(1, 4), (2, 3) -> min(1, 4) + min(2, 3) = 1 + 2 = 3
(1, 3), (2, 4) -> min(1, 3) + min(2, 4) = 1 + 2 = 3
(1, 2), (3, 4) -> min(1, 2) + min(3, 4) = 1 + 3 = 4
So the maximum possible sum is 4.

Sample Input 1

1
3
6 2 6 5 1 2
Sample Output 1

9
Explanation 1

The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.




T = int(input())

for _ in range(T):
    n = int(input())
    nums = list(map(int, input().split()))
    nums.sort()
    max_sum = sum(nums[i] for i in range(0, 2 * n, 2))
    print(max_sum)



