You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

Given an integer array nums representing the amount of money of each house, print the maximum amount of money you can rob tonight without alerting the police.

Input Format

The first line will give T, the number of testcases.
The first line of each testcase will give the size of nums array.
The second line of each testcase will give the nums array.
Constraints

1 <= T <= 1000
1 <= nums.length <= 100
0 <= nums[i] <= 400
Output Format

For each testcase, print the maximum amount of money you can rob tonight without alerting the police.

Sample Input 0

1
4
1 2 3 1
Sample Output 0

4
Explanation 0

Rob house 1 (money = 1) and then rob house 3 (money = 3). Total amount you can rob = 1 + 3 = 4.

Sample Input 1

1
5
2 7 9 3 1
Sample Output 1

12
Explanation 1

Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1). Total amount you can rob = 2 + 9 + 1 = 12.






#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

int robHouses(int nums[], int n) {
    if (n == 0) return 0;
    if (n == 1) return nums[0];

    int dp[n];
    dp[0] = nums[0];
    dp[1] = max(nums[0], nums[1]);

    for (int i = 2; i < n; i++) {
        dp[i] = max(dp[i-1], dp[i-2] + nums[i]);
    }

    return dp[n-1];
}

int main() {
    int T;
    scanf("%d", &T);

    while (T--) {
        int size;
        scanf("%d", &size);

        int nums[size];
        for (int i = 0; i < size; i++) {
            scanf("%d", &nums[i]);
        }

        int result = robHouses(nums, size);
        printf("%d\n", result);
    }

    return 0;
}

