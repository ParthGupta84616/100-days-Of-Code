Secret agents communicate through a unique set of codes and symbols. Agent X, an expert cryptographer, has devised a typing challenge for fellow spies to ensure secure communication.

Agent X uses the American keyboard layout for typing secret messages.

The first row of the keyboard consists of the characters "qwertyuiop".
The second row consists of "asdfghjkl", and
The third row consists of "zxcvbnm".
Agent X gave some array of strings to the fellow spies and asked them to identify whether the string can be typed using letters from only one row of the American keyboard or not. Your task is to help Agent X in evaluating whether the answer provided by the fellow spies is correct or not by designing a program which will check the belonging of the given string to a particular row of the keyboard. Print "yes" if its possible else "no"

Input Format

The first line will provide T, number of testcases.
Each testcase will provide string message.
Constraints

1<=T<=100
string.length<=1000
Output Format

For each testcase output "yes" if the given message can be typed with help of single row, else output "no"

Sample Input 0

2
Alaska
Dad
Sample Output 0

yes
yes
Sample Input 1

1
Hello
Sample Output 1

no



#include <stdio.h>

#include <stdbool.h>

#include <string.h>

#include <ctype.h>

bool isSameRow(char *word) {

    char *row1 = "qwertyuiop";

    char *row2 = "asdfghjkl";

    char *row3 = "zxcvbnm";

    

    int row;

    if (strchr(row1, tolower(word[0])) != NULL) {

        row = 1;

    } else if (strchr(row2, tolower(word[0])) != NULL) {

        row = 2;

    } else {

        row = 3;

    }

    

    for (int i = 1; i < strlen(word); i++) {

        if (row == 1 && strchr(row1, tolower(word[i])) == NULL) {

            return false;

        } else if (row == 2 && strchr(row2, tolower(word[i])) == NULL) {

            return false;

        } else if (row == 3 && strchr(row3, tolower(word[i])) == NULL) {

            return false;

        }

    }

    

    return true;

}

int main() {

    int T;

    scanf("%d", &T);

    

    char word[1001];

    for (int i = 0; i < T; i++) {

        scanf("%s", word);

        

        if (isSameRow(word)) {

            printf("yes\n");

        } else {

            printf("no\n");

        }

    }

    

    return 0;

}


