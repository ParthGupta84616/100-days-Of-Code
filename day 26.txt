You are given an array of n cosmic objects, each with a numerical value representing its mass. Find the stable object in the array. A stable object is one whose mass is equal to the number of times it appears in the array.

Input Format

The first line will give the number of testcase T.
The first line of each testcase will give n, the number of objects in array.
The next line will give the array mass of n objects.
Constraints

1<=T<=10^3
1<=n<=1000
1<=mass[i]<=1000
Output Format

For each testcase output the element whose mass is equal to the number of times it appears in the array. If there exist multiple objects, output all of them seperated by space in sorted order. If there exist none, output -1.

Sample Input 0

1
6
1 1 1 2 2 3
Sample Output 0

2
Explanation 0

here occurances of:-

1=3
2=2
3=1 therefore stable = 2



def find_matching_mass(arr):
    mass_count = {}
    result = []

    for mass in arr:
        if mass in mass_count:
            mass_count[mass] += 1
        else:
            mass_count[mass] = 1

    for mass, count in mass_count.items():
        if mass == count:
            result.append(mass)

    return sorted(result) if result else [-1]

T = int(input())
for _ in range(T):
    size = int(input())
    elements = list(map(int, input().split()))

    result = find_matching_mass(elements)
    print(" ".join(map(str, result)))

