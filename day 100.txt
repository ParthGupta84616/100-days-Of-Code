n the "100 game" two players take turns adding, to a running total, any integer from 1 to 10. The player who first causes the running total to reach or exceed 100 wins.

What if we change the game so that players cannot re-use integers?

For example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.

Given two integers maxChoosableInteger and desiredTotal, print "yes" if the first player to move can force a win, otherwise, print "no". Assume both players play optimally.

Input Format

The first line will give T, the number of testcases.
Each testcase will provide you with 2 integers maxChoosableInteger and desiredTotal.
Constraints

1 <= T <= 1000
1 <= maxChoosableInteger <= 20
0 <= desiredTotal <= 300
Output Format

print "yes" if the first player to move can force a win, otherwise, print "no". Assume both players play optimally.

Sample Input 0

1
10 11
Sample Output 0

no
Explanation 0

No matter which integer the first player choose, the first player will lose. The first player can choose an integer from 1 up to 10. If the first player choose 1, the second player can only choose integers from 2 up to 10. The second player will win by choosing 10 and get a total = 11, which is >= desiredTotal. Same with other integers chosen by the first player, the second player will always win.

Sample Input 1

1
10 0
Sample Output 1

yes
Sample Input 2

1
10 1
Sample Output 2

yes







def can_win(maxChoosableInteger, desiredTotal):
    if (1 + maxChoosableInteger) * maxChoosableInteger // 2 < desiredTotal:
        return "no"
    memo = {}

    def can_win_helper(remaining, state):
        if state in memo:
            return memo[state]
        for i in range(1, maxChoosableInteger + 1):
            if state & (1 << i) == 0:
                if remaining - i <= 0 or not can_win_helper(remaining - i, state | (1 << i)):
                    memo[state] = True
                    return True
        memo[state] = False
        return False
    return "yes" if can_win_helper(desiredTotal, 0) else "no"
T = int(input().strip())
for _ in range(T):
    maxChoosableInteger, desiredTotal = map(int, input().strip().split())
    print(can_win(maxChoosableInteger, desiredTotal))

