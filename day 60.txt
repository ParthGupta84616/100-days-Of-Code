You are given a non-negative integer array nums. In one operation, you must:

Choose a positive integer x such that x is less than or equal to the smallest non-zero element in nums.
Subtract x from every positive element in nums.
Print the minimum number of operations to make every element in nums equal to 0.

Input Format

The first line will give T, the number of testcases.
The first line of each testcase will give length of array nums.
The second line of each testcase will give the array nums.
Constraints

1 <= T <= 1000
1 <= nums.length <= 10^5
0 <= nums[i] <= 10^5
Output Format

For each testcase, print the minimum number of operations to make every element in nums equal to 0.

Sample Input 0

1
5
1 5 0 3 5
Sample Output 0

3
Explanation 0

In the first operation, choose x = 1. Now, nums = [0,4,0,2,4].
In the second operation, choose x = 2. Now, nums = [0,2,0,0,2].
In the third operation, choose x = 2. Now, nums = [0,0,0,0,0].
Sample Input 1

1
1
0
Sample Output 1

0
Explanation 1

Each element in nums is already 0 so no operations are needed.







def min_operations(nums):
    nums.sort()
    operations = 0
    i = 0

    while i < len(nums):
        x = nums[i]

        if x == 0:
            i += 1
        else:
            operations += 1
            for j in range(i, len(nums)):
                nums[j] -= x

            # Skip consecutive zeros
            while i < len(nums) and nums[i] == 0:
                i += 1

    return operations

def main():
    T = int(input())
    for _ in range(T):
        n = int(input())
        nums = list(map(int, input().split()))
        result = min_operations(nums)
        print(result)

if __name__ == "__main__":
    main()

