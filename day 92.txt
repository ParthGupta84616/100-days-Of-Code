Given an array of integers temperatures represents the daily temperatures, print an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

Input Format

The first line will give T, the number of testcases.
The first line of each testcase will give n, the length of temperatures array.
The second line of each testcase will give the array temperatures.
Constraints

1 <= T <= 1000
1 <= temperatures.length <= 10^5
30 <= temperatures[i] <= 100
Output Format

for each testcase, print an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

Sample Input 0

1
8
73 74 75 71 69 72 76 73
Sample Output 0

1 1 4 2 1 1 0 0
Sample Input 1

1
4
30 40 50 60
Sample Output 1

1 1 1 0
Sample Input 2

1
3
30 60 90
Sample Output 2

1 1 0




#include <iostream>
#include <stack>
#include <vector>

using namespace std;

vector<int> dailyTemperatures(vector<int>& temperatures) {
    int n = temperatures.size();
    vector<int> answer(n, 0);
    stack<int> st;
    for (int i = 0; i < n; ++i) {
        while (!st.empty() && temperatures[i] > temperatures[st.top()]) {
            int prev_index = st.top();
            st.pop();
            answer[prev_index] = i - prev_index;
        }
        st.push(i);
    }
    return answer;
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        vector<int> temperatures(n);
        for (int i = 0; i < n; ++i) {
            cin >> temperatures[i];
        }
        vector<int> result = dailyTemperatures(temperatures);
        for (int i = 0; i < n; ++i) {
            cout << result[i];
            if (i < n - 1) {
                cout << " ";
            }
        }
        cout << endl;
    }
    return 0;
}